{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/user/message/message.component.ts","./src/app/dashboard/user/message/message.component.html","./src/app/dashboard/user/profile/profile.component.ts","./src/app/dashboard/user/profile/profile.component.html","./src/app/dashboard/user/user.component.ts","./src/app/dashboard/user/user.component.html","./src/app/dashboard/user/user.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>about works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuard } from './auth.guard';\n\n\nconst routes: Routes = [\n  { \n    path : '' , \n    component : LoginComponent},\n  { \n    path : 'register' , \n    component : RegisterComponent},\n  { \n    path : 'dashboard' , \n    component : DashboardComponent,\n    canActivate : [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ballotics';\n}\n","<div class=\"main-container\">\n\n<mat-toolbar color=\"primary\" class=\"mat-elevation-z5\" class=\"toolbar\">\n  <mat-toolbar-row>\n    Ballotics\n  </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"cont\">\n  <div  class=\"cent\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n/**       Angular Material components */\nimport { MatIconModule } from '@angular/material/icon'; \nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatStepperModule } from '@angular/material/stepper';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { AboutComponent } from './about/about.component';\nimport { UserComponent } from './dashboard/user/user.component';\nimport { MessageComponent } from './dashboard/user/message/message.component';\nimport { ProfileComponent } from './dashboard/user/profile/profile.component';\nimport { AuthService } from './auth.service';\nimport { AuthGuard } from './auth.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    LoginComponent,\n    RegisterComponent,\n    AboutComponent,\n    UserComponent,\n    MessageComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatStepperModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  \n  constructor(private _authservice : AuthService, private _router : Router){\n    \n  }\n  canActivate(): boolean{\n      if(this._authservice.loggedIn()){\n        return true\n      }else{\n        this._router.navigate(['/'])\n        return false\n      }\n    }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private _loginUrl : string = \"./api/user/login.php\";\n  //private _loginUrl : string = \"http://127.0.0.1:80/ballotics/api/user/login.php\";\n  //private _registerUrl : string =\"http://127.0.0.1:80/ballotics/api/user/register.php\";\n  private _registerUrl : string = \"./api/user/register.php\";\n\n  constructor( private http : HttpClient) { }\n\n  loginUser(user){\n    return this.http.post<any>(this._loginUrl, user);\n  }\n\n  registerUser(user){\n    return this.http.post<any>(this._registerUrl, user);\n  }\n  loggedIn(){\n    return !!localStorage.getItem('email');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './user/user.service';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private _user : UserService) { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-sidenav-container>\n\n  <mat-sidenav #sidenav class=\"mat-sidenav\">\n    <button mat-button><mat-icon>person</mat-icon>profile </button>\n    <button mat-button><mat-icon>message</mat-icon> Messages </button>\n    <button mat-button><mat-icon>notifications</mat-icon> Notifications </button>\n    <button mat-button><mat-icon>rss_feed</mat-icon> feed </button>\n    <button mat-button><mat-icon>exit_to_app</mat-icon> Logout </button>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <mat-toolbar color=\"accent\" class=\"mat-elevation-z5\">\n      <mat-toolbar-row>\n      <button mat-icon-button (click)=\"sidenav.toggle()\">\n        <mat-icon>menu</mat-icon>\n      </button> \n        Menu\n      </mat-toolbar-row>\n    </mat-toolbar>\n\n    <!-- Main body -->\n\n    <router-outlet></router-outlet>\n\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss']\n})\nexport class MessageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>message works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>profile works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>user works!</p>\n","import { Injectable } from '@angular/core';\n//import { AuthService } from '.../auth.service';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(/*private _auth : AuthService,*/ private _route : Router){ \n\n  }\n\n  sendMessage(){\n\n  }\n\n  createPost(){\n\n  }\n\n  selectState(){\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginUserData;\n  userData;\n  constructor(private _auth : AuthService, private _route : Router) { \n    this.loginUserData = {};\n    this.userData = {};\n  }\n\n  openDialog(): void{\n\n  }\n\n  ngOnInit() {\n  }\n\n  loginUser(){\n    this._auth.loginUser(this.loginUserData).subscribe(\n      res => {\n        console.log(res)\n        localStorage.setItem('email', res[0].email)\n        this._route.navigate(['/dashboard'])\n      },\n      err => {\n        console.log(err)\n      }\n    )\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-4\"></div>\n        <div class=\"col-md-4\">\n            <mat-card class=\"mat-elevation-z5\">\n\n                <mat-card-header>\n                    <mat-card-title>Login</mat-card-title>\n                </mat-card-header>\n\n\n                <mat-card-content>\n                    <mat-form-field>            \n                        <input [(ngModel)]=\"loginUserData.email\" type=\"text\" matInput placeholder=\"Email\" name=\"email\"  required>\n                        <mat-icon matSuffix color=\"primary\">mail</mat-icon>\n                        <mat-hint align=\"end\">Enter your email here</mat-hint>\n                    </mat-form-field>\n\n                    <br/>\n                    \n                    <mat-form-field>\n                        <input [(ngModel)]=\"loginUserData.password\" type=\"password\" matInput placeholder=\"Password\" name=\"password\" required>\n                        <mat-icon matSuffix color=\"primary\">lock</mat-icon>\n                        <mat-hint align=\"end\">Enter your password here</mat-hint>\n                    </mat-form-field>\n\n                </mat-card-content>\n\n                <mat-card-actions align=\"start\">\n\n                    <button mat-raised-button color=\"primary\" (click)=\"loginUser()\">Login</button>\n                    <br/> You have not registered? Register <a routerLink=\"/register\">here.</a>\n                    \n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerUserData;\n  passwordMessage : string;\n  userData;\n\n  emailFormControl : FormControl;\n\n  constructor(private _auth : AuthService){ \n    this.registerUserData = {};\n    this.userData = {};\n  }\n\n  ngOnInit(){\n    this.emailFormControl = new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]);\n  }\n\n  registerUser(){\n\n    if(this.registerUserData.password == this.registerUserData.password_verify){\n      this._auth.registerUser(this.registerUserData).subscribe(\n        res => console.log(res), \n        err => console.log(err)\n      );\n    }else{\n      this.passwordMessage = \"Passwords must match.\";\n      return false;\n      //console.log(\"No match\");\n    }\n    \n    console.log(this.registerUserData);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-4\"></div>\n        <div class=\"col-md-4\">\n            <mat-card class=\"mat-elevation-z1\"> \n                <mat-card-header>\n                    <mat-card-title>Register</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n\n                    <mat-form-field>\n                    <input type=\"email\" matInput placeholder=\"email\" #email name=\"email\" [(ngModel)]=\"registerUserData.email\" required>\n                    <mat-icon matSuffix color=\"primary\">mail</mat-icon>\n                    <mat-hint align=\"end\">Enter a valid email</mat-hint>\n                    </mat-form-field>\n                    <br/>\n\n                    <mat-form-field>\n                    <input type=\"password\" matInput placeholder=\"Password\" name=\"password\" [(ngModel)]=\"registerUserData.password\" required>\n                    <mat-icon matSuffix color=\"primary\">lock</mat-icon>\n                    <mat-hint align=\"end\">Enter a password</mat-hint>\n                    </mat-form-field>\n                    <br/>\n\n                    <mat-form-field>\n                    <input type=\"password\" matInput placeholder=\"Password\" name=\"password_verify\" [(ngModel)]=\"registerUserData.password_verify\" required>\n                    <mat-icon matSuffix color=\"primary\">lock</mat-icon>\n                    <mat-hint align=\"end\">Enter password again</mat-hint>\n                    </mat-form-field>\n                    {{ passwordMessage }}\n                </mat-card-content>\n                <mat-card-actions align=\"start\">\n                    <button mat-raised-button color=\"primary\" (click)=\"registerUser()\"> Register </button>\n                    <br/>Already registered? Login <a routerLink=\"/\">here.</a>\n                    \n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}