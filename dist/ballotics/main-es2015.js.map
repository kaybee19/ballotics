{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n\nconst routes: Routes = [\n  { path : '' , component : LoginComponent},\n  { path : 'register' , component : RegisterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ballotics';\n}\n","<mat-sidenav-container>\n\n  <mat-sidenav #sidenav>\n    <button mat-button> ABC </button>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\" class=\"mat-elevation-z5\">\n      <mat-toolbar-row>\n      <button mat-icon-button (click)=\"sidenav.toggle()\">\n        <mat-icon>menu</mat-icon>\n      </button> \n        Ballotics\n      </mat-toolbar-row>\n    </mat-toolbar>\n\n    <!-- Main body -->\n\n    <router-outlet></router-outlet>\n\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n/**       Angular Material components */\nimport { MatIconModule } from '@angular/material/icon'; \nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatStepperModule } from '@angular/material/stepper';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatStepperModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\n<mat-card class=\"mat-elevation-z2\">\n\n    <mat-card-header>\n        <mat-card-title>Login</mat-card-title>\n    </mat-card-header>\n\n\n    <mat-card-content>\n        <mat-form-field>            \n            <input type=\"text\" matInput placeholder=\"Email\" name=\"email\">\n            <mat-icon matSuffix color=\"primary\">mail</mat-icon>\n            <mat-hint>Enter your email here</mat-hint>\n        </mat-form-field>\n\n        <br/>\n        \n        <mat-form-field>\n            <input type=\"password\" matInput placeholder=\"Password\" name=\"password\">\n            <mat-icon matSuffix color=\"primary\">lock</mat-icon>\n            <mat-hint>Enter your password here</mat-hint>\n        </mat-form-field>\n\n    </mat-card-content>\n\n    <mat-card-actions align=\"start\">\n\n        <button mat-raised-button color=\"primary\">Login</button>\n        \n    </mat-card-actions>\n\n    <mat-card-footer>\n        You have not registered? Register <a routerLink=\"/register\">here.</a>\n    </mat-card-footer>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-card class=\"mat-elevation-z1\"> \n    <mat-card-header>\n        <mat-card-title>Register</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n\n        <mat-form-field>\n        <input type=\"text\" matInput placeholder=\"email\">\n        <mat-icon matSuffix color=\"primary\">mail</mat-icon>\n        <mat-hint>Enter a valid email</mat-hint>\n        </mat-form-field>\n        <br/>\n\n        <mat-form-field>\n        <input type=\"text\" matInput placeholder=\"Password\">\n        <mat-icon matSuffix color=\"primary\">lock</mat-icon>\n        <mat-hint>Enter a password</mat-hint>\n        </mat-form-field>\n        <br/>\n\n        <mat-form-field>\n        <input type=\"text\" matInput placeholder=\"Password\">\n        <mat-icon matSuffix color=\"primary\">lock</mat-icon>\n        <mat-hint>Enter password again</mat-hint>\n        </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions align=\"start\">\n        <button mat-raised-button color=\"primary\">Register</button>\n        \n    </mat-card-actions>\n    <mat-card-footer>\n        Already registered? Login <a routerLink=\"/\">here.</a>\n    </mat-card-footer>\n</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}